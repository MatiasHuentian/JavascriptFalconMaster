Capitulo 0: habla sobre unas poquitas csoas de javascrpt y enseña como poder llamar
    un conjunto de codgo dsede otra parte ademas, dice que lo ideal es de que el script
    siembre vall a fondo de la pagina para así poder evitar el que quizas... el scrpt 
    modifique alguna cosa que aun ni se ha creado dentro de esta misma

Capitulo 2 variables: muestra como ocupar las variables y los emtodos de aplicaciones que tienen
    ademas de que se puede concatenar, y el uso de la funcion promp opara mandar un mensaje por afuerita

Capitulo 3 tipos de variables:naad que no conzozco, muestra que osn los int,boolean,float,string,null, etc.
    lo unico que teine de adicional es la variable; 
    NaN = variable invalida... como cuando multiplicaas un string... etc 

Capitulo 4 arrays: los arrays s escribe como en php, pero aquí pueden ser modificados llamando al indice
    del array y asignandole otro valor,
    var amigos[2] = "carlos"
    en el caso de arriba si el array de item 2 se llamaba juan ahora se llamará carlos

Capitulo 5 arrays y algunos metodos/propiedads utiles:
    array.length => te va  amostrar el largo.. esto es una propiedad de array, no un metodo
    array.push( var , var) =>este metodo es para poder agregar al final de al array datos 
    array.pop() => es para eliminar el último elemento de una array solo el ÚLTIMO
    array.concat( variableIncluyendoArray ) => con este unes los dos arrays, aunque el indice
        primero será el array descrito y lo seguira el otro array tambien sirve si le pones 
        otros tipos de variables.
    array.join( valor ) => lo que hace esto es de que cuando llames a la array, separe los items
        mediante el valor que le allas dado en valor, en vez de una "," como lo hace 
        convencionalmente
    array.sort() => esta es una propiedad, lo que ace es de que los arregla de forma alfabetica...
         o numerica la csoa es de que los ordena
Aclarar que lo de arriba es una lista basica sobre algunos tipos de metodos, espero irla 
    actualizando mediante el curso y las necesidades que tenga.

Capitulo 6 condicionales => no veo nda relevante en este capitulo, habla sobre la condicionante if
    pero es algo que ya conozco dado que en todos los lenguajes de programacion se ocupa, no he 
    apreciado ningún cambio respectoa  lenguajes como php o java.

Capitulo 7 ciclo for => explica que es un ciclo for, aunque eso ya lo conozco... al igual que las otras
    condicionales son cosas en la que ya e manejo así que no hare ejercicios practivcos de estos 
    ejercicios

Capitulo 8 ciclo while => mas d elo mismo, cosas que ya conozco.. a lo mas explico el ciclo dowhile 
    al final pero por lo demas... todo lo que ya tengo conocimiento

Captulo 9  funciones => las unciones en javascript se definen como  
    function funcion(){ //todo here } por lo demas.. es como siempre, las variables de adentro
        no se pueden llamar... etc etc. además de que obviamente no puedes crear algun tipo de 
        return por fuera de la funcionn 

Capitulo 10 Practica de javasript => aqui me puse a ver como podia hacer sumar dos datos
    llamandolos desde una funciones de javascript, la idea era ver como s podia hacer y
    asegurarme que alla entendido bien y no tenga ningun concepto malformado

Capitulo 11 Scopes => las variables globales se puedem definir.. o creandolas fuera del script
    o creandolas sin el prefijo var(esto en caso de que la crees dentro de una funcion ), y las
    locales son todas las que estan definidas dentro de las funciones, y solo pueden ser accedidas
    por la misma funciones o si son anidadas.

    Otra cosa muuuy importatne del capitulo 11 es de que enseña como ahcer funciones autoinvocadas, esto;
        para no tener problemas con la seguridad, y de esta forma evitar que un programa de terceros
        pueda modifivar las variables qeu estén dentro de este codigo.

Capitulo 12 Funciones de cadenas de texto 
    =>al igual que en las arrays, existe el 
        .lenght para saber la longitud, 
        .substring() para poder elegir entre que partes poder separar el texto,
        -substr() para separar el texto pero enrte ppunto a y punto b
        .indexOf() pones la letra y te dice en que posicion estara la primera letra que coincida
        .lastIndexOf() es lo mismo pero alrevez de atras para adelante
        .replace(texotAModificar , Modificacion) es para modificar una parte
        .toUpperCase mayus
        .toLowerCase

Capitulo 13 introduccion al DOM(Document Object Model)
    el en este capitulo enseña sore como poder trer los datos que estan dentro de un tag (getElementByTagName),
    y como poder extraer todo le textoq ue esta dentro de algubno de estos mimos (innerHtml);

Capitulo 14 creando nodos para insertar al DOM(Document Object Model)
    enseña sobre como poder insertar nodos con JS mediante 5 pasos que el aclara de la siguiente forma.
    //1.- Crear el elemento (crear un elemento p , b, etc)
    var elemento = document.createElement("h2");
    //2.- Crear un nodo de texto (crear el texto que irá dentro de aquel parrafo)
    var contenido =document.createTextNode("Este es el titular del h2")
    //3.- Añadir el noo de texto al elemento (unir el texto con el elemento)
    elemento.appendChild(contenido);
    //4.- Agregar atributos al elemento (embellezer el elemento)
    elemento.setAttribute("align" , 'center');
    //5.- agregar el elemento al documento (insertar el elemento)
    document.getElementById("subtitulo").appendChild(elemento);

Capitulo 15 agregnado nodos donde se plasca DOM(Document Object Model)
    Aqui se muestra sobre como poder insertar nodos en partes especificas..
    como dentro de un tag padre (parentNode), o acceder al elemento hijo,
    para despues decidir si insertar el nodo antes o despues de esta ubicacion
    Recursos utlizados;
        .parentNode => encuentra el tag que sea padre delq ue se este buscando
        .insertBefore => este seencuentra despues del elemento que uno alla seleccionado

Capitulo 16 modificar y acceder al contenido de un elemtno DOM (Document Object Model)
    aquí enseña sobre ocmo poder modificar algunos elementos entre otras cosas
    Sintaxiss que enseña:
        removeChild(elementoQueSeQuiereEliminar) => para poder eliminar alguna parte,esto 
            es beneficioso cuandos abes que un elemento no lo vas a ocupar mas, así no 
            ocupas tanto espacio
        replaceChild(elementoDeReferencia , ElementoConElQueLoDeseasCambiar)=> este es ,
            para reeemplazar alguna cosa , obviamente estas funciones se hacen desde 
            algún elemento padre definido con el getElementBy...
        innerHtml() => para traer el texto tml pero en crudo, con los p y todo, esto 
            tambien sirve para que justamente puedas crear divs, li, elementos...
            dentro del inner, en cambio con el textContent, solo cambias el texto y es literal..
            no es interpretado por html, solo texto
        textContent() => es para poder reemplazar el texto pero de forma literal... no puedes crear
            divs ni nada de eso.. solamente texto.
Capitulo 17 Acceso a los atributos del DOM (Document Object Model)
    en este capitulo estoy bviendo sobre como poder modificar los atributos mediante ciertos metodos
        Como por ejemplo;
    setAttribute(nombreDelAtributo(aquíVieneElNombreDelAtribto id,Class,etc...) , valorDelAtributo")
        como bine dice la funcion, con esto tu defines el atributo.
    Para tener la informacion mucho mas clara animo a que veas el codigo html que se puede ejecutar 
    en cualquier computador

Capitulo 18 modificar estilo de elemento:
    En este capitulo vemos como poder modificar los estilos que contiene el html, de una forma 
        bastante simple y fácil, ocupando como por ejemplo;
    encabezado.style.textAlign = "center"; para darle el atributo center, despues del ".style"
        tu escribes el atributo por el cua quieres reemplazarlo .
    encabezado.className = encabezado.className.replace("titulo" , "") para reemplazar solo una cosa.

